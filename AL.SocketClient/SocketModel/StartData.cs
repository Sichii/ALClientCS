using System.Collections.Generic;
using AL.SocketClient.Json.Converters;
using AL.SocketClient.Model;
using Newtonsoft.Json;

namespace AL.SocketClient.SocketModel
{
    /// <summary>
    ///     Represents the data received when initially joining a server.
    /// </summary>
    /// <seealso cref="CharacterData" />
    [JsonConverter(typeof(CharacterConverter<StartData>))]
    public record StartData : CharacterData
    {
        /// <summary>
        ///     A collection of valued indicating base gold rewards for killing a monster on a specific map. <br />
        ///     These values are dynamically generated by the server, and different based on class, level, and other factors.
        ///     <br />
        ///     { MonsterName : { MapName: GoldValue } }
        /// </summary>
        [JsonProperty("base_gold")]
        public IReadOnlyDictionary<string, IReadOnlyDictionary<string, int>> BaseGold { get; init; } =
            new Dictionary<string, IReadOnlyDictionary<string, int>>();

        /// <summary>
        ///     Initial entity load for the map you loaded into.
        /// </summary>
        [JsonProperty]
        public EntitiesData Entities { get; init; } = null!;

        /// <summary>
        ///     Contains data for ongoing events and bosses for this server.
        /// </summary>
        [JsonProperty("s_info"), JsonConverter(typeof(EventAndBossDataConverter))]
        public EventAndBossInfo EventAndBossInfo { get; init; } = null!;
    }
}